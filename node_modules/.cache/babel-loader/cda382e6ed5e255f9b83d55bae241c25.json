{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/home/pitt/Development/phase-2-hooks-code-challenge-bank-of-flatiron-wainainapitt/src/components/TransactionsList.js\",\n    _s = $RefreshSig$();\n\n// TransactionsList.js\nimport React, { useState, useEffect } from \"react\";\nimport Transaction from \"./Transaction\";\n\nfunction TransactionsList() {\n  _s();\n\n  const [transactions, setTransactions] = useState([]);\n  const [filteredTransactions, setFilteredTransactions] = useState([]);\n  useEffect(() => {\n    // Fetch transactions from the backend API\n    fetch('http://localhost:8001/transactions').then(response => response.json()).then(data => {\n      setTransactions(data);\n      setFilteredTransactions(data);\n    }).catch(error => console.error('Error:', error));\n  }, []);\n\n  const handleSearch = term => {\n    const filtered = transactions.filter(transaction => transaction.description.toLowerCase().includes(term));\n    setFilteredTransactions(filtered);\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(Search, {\n      onSearch: handleSearch\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"table\", {\n      className: \"ui celled striped padded table\",\n      children: /*#__PURE__*/_jsxDEV(\"tbody\", {\n        children: [/*#__PURE__*/_jsxDEV(\"tr\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 33,\n          columnNumber: 11\n        }, this), filteredTransactions.map(transaction => /*#__PURE__*/_jsxDEV(Transaction, {\n          date: transaction.date,\n          description: transaction.description,\n          category: transaction.category,\n          amount: transaction.amount\n        }, transaction.id, false, {\n          fileName: _jsxFileName,\n          lineNumber: 37,\n          columnNumber: 13\n        }, this))]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 32,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 29,\n    columnNumber: 5\n  }, this);\n}\n\n_s(TransactionsList, \"7na4B7SK+6CvvEHetQqCQKoiewE=\");\n\n_c = TransactionsList;\nexport default TransactionsList;\n\nvar _c;\n\n$RefreshReg$(_c, \"TransactionsList\");","map":{"version":3,"sources":["/home/pitt/Development/phase-2-hooks-code-challenge-bank-of-flatiron-wainainapitt/src/components/TransactionsList.js"],"names":["React","useState","useEffect","Transaction","TransactionsList","transactions","setTransactions","filteredTransactions","setFilteredTransactions","fetch","then","response","json","data","catch","error","console","handleSearch","term","filtered","filter","transaction","description","toLowerCase","includes","map","date","category","amount","id"],"mappings":";;;;;AAAA;AAEA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;AACA,OAAOC,WAAP,MAAwB,eAAxB;;AAEA,SAASC,gBAAT,GAA4B;AAAA;;AAC1B,QAAM,CAACC,YAAD,EAAeC,eAAf,IAAkCL,QAAQ,CAAC,EAAD,CAAhD;AACA,QAAM,CAACM,oBAAD,EAAuBC,uBAAvB,IAAkDP,QAAQ,CAAC,EAAD,CAAhE;AAEAC,EAAAA,SAAS,CAAC,MAAM;AACd;AACAO,IAAAA,KAAK,CAAC,oCAAD,CAAL,CACGC,IADH,CACQC,QAAQ,IAAIA,QAAQ,CAACC,IAAT,EADpB,EAEGF,IAFH,CAEQG,IAAI,IAAI;AACZP,MAAAA,eAAe,CAACO,IAAD,CAAf;AACAL,MAAAA,uBAAuB,CAACK,IAAD,CAAvB;AACD,KALH,EAMGC,KANH,CAMSC,KAAK,IAAIC,OAAO,CAACD,KAAR,CAAc,QAAd,EAAwBA,KAAxB,CANlB;AAOD,GATQ,EASN,EATM,CAAT;;AAWA,QAAME,YAAY,GAAIC,IAAD,IAAU;AAC7B,UAAMC,QAAQ,GAAGd,YAAY,CAACe,MAAb,CAAoBC,WAAW,IAC9CA,WAAW,CAACC,WAAZ,CAAwBC,WAAxB,GAAsCC,QAAtC,CAA+CN,IAA/C,CADe,CAAjB;AAGAV,IAAAA,uBAAuB,CAACW,QAAD,CAAvB;AACD,GALD;;AAOA,sBACE;AAAA,4BACE,QAAC,MAAD;AAAQ,MAAA,QAAQ,EAAEF;AAAlB;AAAA;AAAA;AAAA;AAAA,YADF,eAEE;AAAO,MAAA,SAAS,EAAC,gCAAjB;AAAA,6BACE;AAAA,gCACE;AAAA;AAAA;AAAA;AAAA,gBADF,EAIGV,oBAAoB,CAACkB,GAArB,CAAyBJ,WAAW,iBACnC,QAAC,WAAD;AAEE,UAAA,IAAI,EAAEA,WAAW,CAACK,IAFpB;AAGE,UAAA,WAAW,EAAEL,WAAW,CAACC,WAH3B;AAIE,UAAA,QAAQ,EAAED,WAAW,CAACM,QAJxB;AAKE,UAAA,MAAM,EAAEN,WAAW,CAACO;AALtB,WACOP,WAAW,CAACQ,EADnB;AAAA;AAAA;AAAA;AAAA,gBADD,CAJH;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,YAFF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAqBD;;GA3CQzB,gB;;KAAAA,gB;AA6CT,eAAeA,gBAAf","sourcesContent":["// TransactionsList.js\n\nimport React, { useState, useEffect } from \"react\";\nimport Transaction from \"./Transaction\";\n\nfunction TransactionsList() {\n  const [transactions, setTransactions] = useState([]);\n  const [filteredTransactions, setFilteredTransactions] = useState([]);\n\n  useEffect(() => {\n    // Fetch transactions from the backend API\n    fetch('http://localhost:8001/transactions')\n      .then(response => response.json())\n      .then(data => {\n        setTransactions(data);\n        setFilteredTransactions(data);\n      })\n      .catch(error => console.error('Error:', error));\n  }, []);\n\n  const handleSearch = (term) => {\n    const filtered = transactions.filter(transaction =>\n      transaction.description.toLowerCase().includes(term)\n    );\n    setFilteredTransactions(filtered);\n  };\n\n  return (\n    <div>\n      <Search onSearch={handleSearch} />\n      <table className=\"ui celled striped padded table\">\n        <tbody>\n          <tr>\n            {/* Your table headers */}\n          </tr>\n          {filteredTransactions.map(transaction => (\n            <Transaction\n              key={transaction.id}\n              date={transaction.date}\n              description={transaction.description}\n              category={transaction.category}\n              amount={transaction.amount}\n            />\n          ))}\n        </tbody>\n      </table>\n    </div>\n  );\n}\n\nexport default TransactionsList;\n"]},"metadata":{},"sourceType":"module"}