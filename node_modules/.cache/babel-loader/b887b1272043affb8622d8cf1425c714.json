{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/home/pitt/Development/phase-2-hooks-code-challenge-bank-of-flatiron-wainainapitt/src/components/AccountContainer.js\",\n    _s = $RefreshSig$();\n\n// AccountContainer.js\nimport React, { useState, useEffect } from \"react\";\nimport TransactionsList from \"./TransactionsList\";\nimport Search from \"./Search\";\nimport AddTransactionForm from \"./AddTransactionForm\";\n\nfunction AccountContainer() {\n  _s();\n\n  const [transactions, setTransactions] = useState([]);\n  useEffect(() => {\n    // Fetch transactions from the backend API\n    fetch('http://localhost:8001/transactions').then(response => response.json()).then(data => {\n      setTransactions(data);\n    }).catch(error => console.error('Error:', error));\n  }, []);\n\n  const handleAddTransaction = formData => {\n    fetch('http://localhost:8001/transactions', {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify(formData)\n    }).then(response => response.json()).then(data => {\n      setTransactions([...transactions, data]); // Add the new transaction to the transactions state\n    }).catch(error => console.error('Error:', error));\n  };\n\n  const handleSearch = term => {// Filtering logic based on term...\n    // Implement logic to filter transactions based on the search term\n    // Update the filtered transactions state accordingly\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(Search, {\n      onSearch: handleSearch\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(AddTransactionForm, {\n      onAddTransaction: handleAddTransaction\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(TransactionsList, {\n      transactions: transactions\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 43,\n    columnNumber: 5\n  }, this);\n}\n\n_s(AccountContainer, \"tSC852gg/pAfbHr6jYEePbawnUU=\");\n\n_c = AccountContainer;\nexport default AccountContainer;\n\nvar _c;\n\n$RefreshReg$(_c, \"AccountContainer\");","map":{"version":3,"sources":["/home/pitt/Development/phase-2-hooks-code-challenge-bank-of-flatiron-wainainapitt/src/components/AccountContainer.js"],"names":["React","useState","useEffect","TransactionsList","Search","AddTransactionForm","AccountContainer","transactions","setTransactions","fetch","then","response","json","data","catch","error","console","handleAddTransaction","formData","method","headers","body","JSON","stringify","handleSearch","term"],"mappings":";;;;;AAAA;AAEA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;AACA,OAAOC,gBAAP,MAA6B,oBAA7B;AACA,OAAOC,MAAP,MAAmB,UAAnB;AACA,OAAOC,kBAAP,MAA+B,sBAA/B;;AAEA,SAASC,gBAAT,GAA4B;AAAA;;AAC1B,QAAM,CAACC,YAAD,EAAeC,eAAf,IAAkCP,QAAQ,CAAC,EAAD,CAAhD;AAEAC,EAAAA,SAAS,CAAC,MAAM;AACd;AACAO,IAAAA,KAAK,CAAC,oCAAD,CAAL,CACGC,IADH,CACQC,QAAQ,IAAIA,QAAQ,CAACC,IAAT,EADpB,EAEGF,IAFH,CAEQG,IAAI,IAAI;AACZL,MAAAA,eAAe,CAACK,IAAD,CAAf;AACD,KAJH,EAKGC,KALH,CAKSC,KAAK,IAAIC,OAAO,CAACD,KAAR,CAAc,QAAd,EAAwBA,KAAxB,CALlB;AAMD,GARQ,EAQN,EARM,CAAT;;AAUA,QAAME,oBAAoB,GAAIC,QAAD,IAAc;AACzCT,IAAAA,KAAK,CAAC,oCAAD,EAAuC;AAC1CU,MAAAA,MAAM,EAAE,MADkC;AAE1CC,MAAAA,OAAO,EAAE;AACP,wBAAgB;AADT,OAFiC;AAK1CC,MAAAA,IAAI,EAAEC,IAAI,CAACC,SAAL,CAAeL,QAAf;AALoC,KAAvC,CAAL,CAOCR,IAPD,CAOMC,QAAQ,IAAIA,QAAQ,CAACC,IAAT,EAPlB,EAQCF,IARD,CAQMG,IAAI,IAAI;AACZL,MAAAA,eAAe,CAAC,CAAC,GAAGD,YAAJ,EAAkBM,IAAlB,CAAD,CAAf,CADY,CAC8B;AAC3C,KAVD,EAWCC,KAXD,CAWOC,KAAK,IAAIC,OAAO,CAACD,KAAR,CAAc,QAAd,EAAwBA,KAAxB,CAXhB;AAYD,GAbD;;AAeA,QAAMS,YAAY,GAAIC,IAAD,IAAU,CAC7B;AACA;AACA;AACD,GAJD;;AAMA,sBACE;AAAA,4BACE,QAAC,MAAD;AAAQ,MAAA,QAAQ,EAAED;AAAlB;AAAA;AAAA;AAAA;AAAA,YADF,eAEE,QAAC,kBAAD;AAAoB,MAAA,gBAAgB,EAAEP;AAAtC;AAAA;AAAA;AAAA;AAAA,YAFF,eAGE,QAAC,gBAAD;AAAkB,MAAA,YAAY,EAAEV;AAAhC;AAAA;AAAA;AAAA;AAAA,YAHF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAOD;;GAzCQD,gB;;KAAAA,gB;AA2CT,eAAeA,gBAAf","sourcesContent":["// AccountContainer.js\n\nimport React, { useState, useEffect } from \"react\";\nimport TransactionsList from \"./TransactionsList\";\nimport Search from \"./Search\";\nimport AddTransactionForm from \"./AddTransactionForm\";\n\nfunction AccountContainer() {\n  const [transactions, setTransactions] = useState([]);\n\n  useEffect(() => {\n    // Fetch transactions from the backend API\n    fetch('http://localhost:8001/transactions')\n      .then(response => response.json())\n      .then(data => {\n        setTransactions(data);\n      })\n      .catch(error => console.error('Error:', error));\n  }, []);\n\n  const handleAddTransaction = (formData) => {\n    fetch('http://localhost:8001/transactions', {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json',\n      },\n      body: JSON.stringify(formData),\n    })\n    .then(response => response.json())\n    .then(data => {\n      setTransactions([...transactions, data]); // Add the new transaction to the transactions state\n    })\n    .catch(error => console.error('Error:', error));\n  };\n\n  const handleSearch = (term) => {\n    // Filtering logic based on term...\n    // Implement logic to filter transactions based on the search term\n    // Update the filtered transactions state accordingly\n  };\n\n  return (\n    <div>\n      <Search onSearch={handleSearch} />\n      <AddTransactionForm onAddTransaction={handleAddTransaction} />\n      <TransactionsList transactions={transactions} />\n    </div>\n  );\n}\n\nexport default AccountContainer;\n"]},"metadata":{},"sourceType":"module"}